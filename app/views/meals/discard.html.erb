<!-- Hidden form container for multi-meal generation -->
  <div class="container">
    <%= form_with url: "/meals" do |f| %>
      <div class="mb-3">
        <%= f.hidden_field :meal_type, value: :meal_type, data: { target: 'meal-new.setType' } %>
      </div>
      <div class="mb-3" data-meal-new-target = "setUserID">
      </div>
      <div class="mb-3" data-meal-new-target = "setMenuID">
      </div>
      <div class="mb-3">
        <%= f.submit %>
      </div>
    <% end %>
  </div>
</div>



<!-- Button trigger modal -->
<button hidden id="openMeal" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
  Set Meal
</button>

<!-- Modal in New page-->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content" >
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">Choose Meal details</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <%= form_with url: "/meals/new" do |f| %>
          <div class="mb-3" data-meal-new-target="getType">
            <%= f.select :meal_type, @meal_type, { prompt: "Select meal" } %>
          </div>
          <div class="mb-3" data-meal-new-target="getUserID">
            <%= f.collection_check_boxes(:user_ids, @users, :id, :name_first, include_hidden: false) %>
          </div>
          <div class="mb-3" data-meal-new-target="getMenuID">
            <%= f.collection_check_boxes(:menu_ids, @menus, :id, :date, include_hidden: false)   %>
          </div>
        <% end %>
        <div data-meal-new-target="errorMessage"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-action="meal-new#setMeal" >Next</button>
        <button hidden type="button" id="closeMeal" class="btn btn-warning" data-bs-dismiss="modal">Hidden</button>
      </div>
    </div>
  </div>
</div>


<!-- Search recipes form on Meals/new -->
  <div>
    <%= form_with url: new_meal_path, method: 'get', local: true do |f| %>
      <%= f.label :query, "Search for:" %>
      <%= f.text_field :query, multiple: true %>
      <%= f.fields_for :filters do |ft| %>
        <%= ft.label "Filter by: " %>
        <%= ft.select :mealType, @meal_type %>
        <%= ft.select :dishType, @dish_type %>
        <%= ft.select :health, @health %>
      <% end %>
      <%= f.submit "Search" %>
    <% end %>
  </div>
  <div class="card-deck">
    <%= render 'recipe_card' %>
  </div>


  <!-- Search form in Stimulus -->

    Edamam::Erecipe.search(params[query], params[filters])

  fetchRecipes(query) {
      const type = "type=public";
    const url = "https://api.edamam.com/api/recipes/v2";
    const app_id = "app_id=bb5e4702";
    const api_key = "app_key=7cb8c06cdedbc2d089957cc57703423c";
    const image = "imageSize=THUMBNAIL";
    fetch(`${url}?${type}&q=${query}%20&${app_id}&${api_key}&${image}`)
    .then(response => response.json())

    .then((data) => this.insertRecipes(data))

  }


<!-- HTML form to create Course on recipe card -->

  <form action="/meals" accept-charset="UTF-8" method="post">
    <input value="Main course" autocomplete="off" type="hidden" name="course_type" id="course_type">
    <input value="${recipe_id}" autocomplete="off" type="hidden" name="erecipe_id" id="erecipe_id">
    <input  value="1060, 1063, 1066, 1069]" name="meal_ids[]" mutliple="true" value="@meals" autocomplete="off" type="hidden" id="meal_ids">
    <input type="submit" name="commit" value="Add Course" data-disable-with="Add Course">
  </form>
